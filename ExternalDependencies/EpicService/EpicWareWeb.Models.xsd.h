
// File generated by Wsutil Compiler version 1.0095 
// This file defines C/C++ functions, callbacks, types that correspond to operations,
// and types specified in WSDL and XSD files processed by Wsutil compiler. The generated 
// type definitions, function and callback declarations can be used with various 
// Web Services APIs either in applications that send and receive requests to and 
// from a running web service, or in the implementation of web services, or in both. 
//
// If Wsutil has generated this file from an XSD file, the file contains definition of 
// C/C++ structures types that correspond to types defined in the XSD file. 
// For example, if the following XSD complexType is defined in the XSD file
//
//      <xsd:complexType name="AddRequest">
//          <xsd:sequence>
//              <xsd:element minOccurs="0" name="a" type="xsd:int" />
//              <xsd:element minOccurs="0" name="b" type="xsd:int" />
//          </xsd:sequence>
//      </xsd:complexType>
// 
// this file contains the following definitions of the structure 
//      // AddRequest (xsd:complexType)
//      // <AddRequest xmlns='http://tempuri.org'>
//      // WS_STRUCT_DESCRIPTION* = &calculator_xsd.globalTypes.AddRequest
//      struct AddRequest
//      {
//          int a;
//          int b;
//      };
//
// For more information on how to use the C/C++ types generated in this file to read or write elements of XML documents that conform to 
// this XSD, please see the documentation for 
// WsReadType() and WsWriteType() functions.
// 
#if _MSC_VER > 1000 
#pragma once
#endif

#ifdef __cplusplus
extern "C" {
#endif

// The following types were generated:

//     struct User;
//     struct Language;
//     struct ArrayOfConnection;
//     struct Connection;
//     struct TagConnection;
//     struct ArrayOfMission;
//     struct Mission;
//     struct Mood;
//     struct ArrayOfNotification;
//     struct Notification;
//     struct NotificationType;
//     struct ArrayOfScoreUser;
//     struct ScoreUser;
//     struct Profile;
//     struct Country;
//     struct ArrayOfTag;
//     struct Tag;
//     struct ArrayOfUser;
//     struct User;
//     struct Language;
//     struct ArrayOfConnection;
//     struct Connection;
//     struct TagConnection;
//     struct ArrayOfMission;
//     struct Mission;
//     struct Mood;
//     struct ArrayOfNotification;
//     struct Notification;
//     struct NotificationType;
//     struct ArrayOfScoreUser;
//     struct ScoreUser;
//     struct Profile;
//     struct Country;
//     struct ArrayOfTag;
//     struct Tag;
//     struct ArrayOfUser;

// The following header files must be included in this order before this one

// #include <WebServices.h>

////////////////////////////////////////////////
// C structure definitions for generated types
////////////////////////////////////////////////

// typeDescription: EpicWareWeb_Models_xsd.globalTypes.User
typedef struct User 
{
    int UserProfileID;
    BOOL active;
    WCHAR* email; // optional
    struct Language* language; // optional
    unsigned int listConnectionsCount;
    _Field_size_opt_(listConnectionsCount)struct Connection** listConnections; // optional
    unsigned int missionsCount;
    _Field_size_opt_(missionsCount)struct Mission** missions; // optional
    struct Mood* mood; // optional
    unsigned int notificationsCount;
    _Field_size_opt_(notificationsCount)struct Notification** notifications; // optional
    unsigned int scoresCount;
    _Field_size_opt_(scoresCount)struct ScoreUser** scores; // optional
    int userID;
    struct Profile* userProfile; // optional
    unsigned int userTagsCount;
    _Field_size_opt_(userTagsCount)struct Tag** userTags; // optional
} User;

// typeDescription: EpicWareWeb_Models_xsd.globalTypes.Language
typedef struct Language 
{
    int languageID;
    WCHAR* name; // optional
} Language;

// typeDescription: EpicWareWeb_Models_xsd.globalTypes.Connection
typedef struct Connection 
{
    struct User* Owner; // optional
    int connectionID;
    int strenght;
    struct TagConnection* tagConnection; // optional
    struct User* userConnected; // optional
} Connection;

// typeDescription: EpicWareWeb_Models_xsd.globalTypes.TagConnection
typedef struct TagConnection 
{
    WCHAR* tag; // optional
    int tagConnectionID;
} TagConnection;

// typeDescription: EpicWareWeb_Models_xsd.globalTypes.Mission
typedef struct Mission 
{
    WCHAR* description; // optional
    int level;
    int missionID;
} Mission;

// typeDescription: EpicWareWeb_Models_xsd.globalTypes.Mood
typedef struct Mood 
{
    int moodID;
    WCHAR* name; // optional
} Mood;

// typeDescription: EpicWareWeb_Models_xsd.globalTypes.Notification
typedef struct Notification 
{
    WCHAR* message; // optional
    int notificationID;
    struct NotificationType* notificationType; // optional
    BOOL read;
    WS_DATETIME time;
} Notification;

// typeDescription: EpicWareWeb_Models_xsd.globalTypes.NotificationType
typedef struct NotificationType 
{
    int notificationTypeID;
    WCHAR* resultLink; // optional
    WCHAR* type; // optional
} NotificationType;

// typeDescription: EpicWareWeb_Models_xsd.globalTypes.ScoreUser
typedef struct ScoreUser 
{
    int scoreUserID;
} ScoreUser;

// typeDescription: EpicWareWeb_Models_xsd.globalTypes.Profile
typedef struct Profile 
{
    WS_DATETIME birthday;
    struct Country* country; // optional
    WCHAR* facebookProfile; // optional
    WCHAR* gender; // optional
    WCHAR* lastName; // optional
    WCHAR* linkedinProfile; // optional
    WCHAR* name; // optional
    WCHAR* nickname; // optional
    WCHAR* pathImg; // optional
    int phoneNumber;
    int profileID;
    WCHAR* twitterProfile; // optional
} Profile;

// typeDescription: EpicWareWeb_Models_xsd.globalTypes.Country
typedef struct Country 
{
    int countryID;
    WCHAR* name; // optional
} Country;

// typeDescription: EpicWareWeb_Models_xsd.globalTypes.Tag
typedef struct Tag 
{
    WCHAR* tag; // optional
    int tagID;
} Tag;

// typeDescription: EpicWareWeb_Models_xsd.globalTypes.ArrayOfConnection
typedef struct ArrayOfConnection 
{
    unsigned int ConnectionCount;
    _Field_size_(ConnectionCount)struct Connection** Connection; // optional
} ArrayOfConnection;

// typeDescription: EpicWareWeb_Models_xsd.globalTypes.ArrayOfMission
typedef struct ArrayOfMission 
{
    unsigned int MissionCount;
    _Field_size_(MissionCount)struct Mission** Mission; // optional
} ArrayOfMission;

// typeDescription: EpicWareWeb_Models_xsd.globalTypes.ArrayOfNotification
typedef struct ArrayOfNotification 
{
    unsigned int NotificationCount;
    _Field_size_(NotificationCount)struct Notification** Notification; // optional
} ArrayOfNotification;

// typeDescription: EpicWareWeb_Models_xsd.globalTypes.ArrayOfScoreUser
typedef struct ArrayOfScoreUser 
{
    unsigned int ScoreUserCount;
    _Field_size_(ScoreUserCount)struct ScoreUser** ScoreUser; // optional
} ArrayOfScoreUser;

// typeDescription: EpicWareWeb_Models_xsd.globalTypes.ArrayOfTag
typedef struct ArrayOfTag 
{
    unsigned int TagCount;
    _Field_size_(TagCount)struct Tag** Tag; // optional
} ArrayOfTag;

// typeDescription: EpicWareWeb_Models_xsd.globalTypes.ArrayOfUser
typedef struct ArrayOfUser 
{
    unsigned int UserCount;
    _Field_size_(UserCount)struct User** User; // optional
} ArrayOfUser;

////////////////////////////////////////////////
// Global web service descriptions.
////////////////////////////////////////////////

typedef struct _EpicWareWeb_Models_xsd
{
    struct // globalTypes
    {
        // xml type: User ("http://schemas.datacontract.org/2004/07/EpicWareWeb.Models")
        // c type: User
        // WS_TYPE: WS_STRUCT_TYPE
        // typeDescription: EpicWareWeb_Models_xsd.globalTypes.User
        WS_STRUCT_DESCRIPTION User;
        
        // xml type: Language ("http://schemas.datacontract.org/2004/07/EpicWareWeb.Models")
        // c type: Language
        // WS_TYPE: WS_STRUCT_TYPE
        // typeDescription: EpicWareWeb_Models_xsd.globalTypes.Language
        WS_STRUCT_DESCRIPTION Language;
        
        // xml type: ArrayOfConnection ("http://schemas.datacontract.org/2004/07/EpicWareWeb.Models")
        // c type: ArrayOfConnection
        // WS_TYPE: WS_STRUCT_TYPE
        // typeDescription: EpicWareWeb_Models_xsd.globalTypes.ArrayOfConnection
        WS_STRUCT_DESCRIPTION ArrayOfConnection;
        
        // xml type: Connection ("http://schemas.datacontract.org/2004/07/EpicWareWeb.Models")
        // c type: Connection
        // WS_TYPE: WS_STRUCT_TYPE
        // typeDescription: EpicWareWeb_Models_xsd.globalTypes.Connection
        WS_STRUCT_DESCRIPTION Connection;
        
        // xml type: TagConnection ("http://schemas.datacontract.org/2004/07/EpicWareWeb.Models")
        // c type: TagConnection
        // WS_TYPE: WS_STRUCT_TYPE
        // typeDescription: EpicWareWeb_Models_xsd.globalTypes.TagConnection
        WS_STRUCT_DESCRIPTION TagConnection;
        
        // xml type: ArrayOfMission ("http://schemas.datacontract.org/2004/07/EpicWareWeb.Models")
        // c type: ArrayOfMission
        // WS_TYPE: WS_STRUCT_TYPE
        // typeDescription: EpicWareWeb_Models_xsd.globalTypes.ArrayOfMission
        WS_STRUCT_DESCRIPTION ArrayOfMission;
        
        // xml type: Mission ("http://schemas.datacontract.org/2004/07/EpicWareWeb.Models")
        // c type: Mission
        // WS_TYPE: WS_STRUCT_TYPE
        // typeDescription: EpicWareWeb_Models_xsd.globalTypes.Mission
        WS_STRUCT_DESCRIPTION Mission;
        
        // xml type: Mood ("http://schemas.datacontract.org/2004/07/EpicWareWeb.Models")
        // c type: Mood
        // WS_TYPE: WS_STRUCT_TYPE
        // typeDescription: EpicWareWeb_Models_xsd.globalTypes.Mood
        WS_STRUCT_DESCRIPTION Mood;
        
        // xml type: ArrayOfNotification ("http://schemas.datacontract.org/2004/07/EpicWareWeb.Models")
        // c type: ArrayOfNotification
        // WS_TYPE: WS_STRUCT_TYPE
        // typeDescription: EpicWareWeb_Models_xsd.globalTypes.ArrayOfNotification
        WS_STRUCT_DESCRIPTION ArrayOfNotification;
        
        // xml type: Notification ("http://schemas.datacontract.org/2004/07/EpicWareWeb.Models")
        // c type: Notification
        // WS_TYPE: WS_STRUCT_TYPE
        // typeDescription: EpicWareWeb_Models_xsd.globalTypes.Notification
        WS_STRUCT_DESCRIPTION Notification;
        
        // xml type: NotificationType ("http://schemas.datacontract.org/2004/07/EpicWareWeb.Models")
        // c type: NotificationType
        // WS_TYPE: WS_STRUCT_TYPE
        // typeDescription: EpicWareWeb_Models_xsd.globalTypes.NotificationType
        WS_STRUCT_DESCRIPTION NotificationType;
        
        // xml type: ArrayOfScoreUser ("http://schemas.datacontract.org/2004/07/EpicWareWeb.Models")
        // c type: ArrayOfScoreUser
        // WS_TYPE: WS_STRUCT_TYPE
        // typeDescription: EpicWareWeb_Models_xsd.globalTypes.ArrayOfScoreUser
        WS_STRUCT_DESCRIPTION ArrayOfScoreUser;
        
        // xml type: ScoreUser ("http://schemas.datacontract.org/2004/07/EpicWareWeb.Models")
        // c type: ScoreUser
        // WS_TYPE: WS_STRUCT_TYPE
        // typeDescription: EpicWareWeb_Models_xsd.globalTypes.ScoreUser
        WS_STRUCT_DESCRIPTION ScoreUser;
        
        // xml type: Profile ("http://schemas.datacontract.org/2004/07/EpicWareWeb.Models")
        // c type: Profile
        // WS_TYPE: WS_STRUCT_TYPE
        // typeDescription: EpicWareWeb_Models_xsd.globalTypes.Profile
        WS_STRUCT_DESCRIPTION Profile;
        
        // xml type: Country ("http://schemas.datacontract.org/2004/07/EpicWareWeb.Models")
        // c type: Country
        // WS_TYPE: WS_STRUCT_TYPE
        // typeDescription: EpicWareWeb_Models_xsd.globalTypes.Country
        WS_STRUCT_DESCRIPTION Country;
        
        // xml type: ArrayOfTag ("http://schemas.datacontract.org/2004/07/EpicWareWeb.Models")
        // c type: ArrayOfTag
        // WS_TYPE: WS_STRUCT_TYPE
        // typeDescription: EpicWareWeb_Models_xsd.globalTypes.ArrayOfTag
        WS_STRUCT_DESCRIPTION ArrayOfTag;
        
        // xml type: Tag ("http://schemas.datacontract.org/2004/07/EpicWareWeb.Models")
        // c type: Tag
        // WS_TYPE: WS_STRUCT_TYPE
        // typeDescription: EpicWareWeb_Models_xsd.globalTypes.Tag
        WS_STRUCT_DESCRIPTION Tag;
        
        // xml type: ArrayOfUser ("http://schemas.datacontract.org/2004/07/EpicWareWeb.Models")
        // c type: ArrayOfUser
        // WS_TYPE: WS_STRUCT_TYPE
        // typeDescription: EpicWareWeb_Models_xsd.globalTypes.ArrayOfUser
        WS_STRUCT_DESCRIPTION ArrayOfUser;
        
    } globalTypes;
    struct // globalElements
    {
        // xml element: User ("http://schemas.datacontract.org/2004/07/EpicWareWeb.Models")
        // c type: User
        // elementDescription: EpicWareWeb_Models_xsd.globalElements.User
        WS_ELEMENT_DESCRIPTION User;
        
        // xml element: Language ("http://schemas.datacontract.org/2004/07/EpicWareWeb.Models")
        // c type: Language
        // elementDescription: EpicWareWeb_Models_xsd.globalElements.Language
        WS_ELEMENT_DESCRIPTION Language;
        
        // xml element: ArrayOfConnection ("http://schemas.datacontract.org/2004/07/EpicWareWeb.Models")
        // c type: ArrayOfConnection
        // elementDescription: EpicWareWeb_Models_xsd.globalElements.ArrayOfConnection
        WS_ELEMENT_DESCRIPTION ArrayOfConnection;
        
        // xml element: Connection ("http://schemas.datacontract.org/2004/07/EpicWareWeb.Models")
        // c type: Connection
        // elementDescription: EpicWareWeb_Models_xsd.globalElements.Connection
        WS_ELEMENT_DESCRIPTION Connection;
        
        // xml element: TagConnection ("http://schemas.datacontract.org/2004/07/EpicWareWeb.Models")
        // c type: TagConnection
        // elementDescription: EpicWareWeb_Models_xsd.globalElements.TagConnection
        WS_ELEMENT_DESCRIPTION TagConnection;
        
        // xml element: ArrayOfMission ("http://schemas.datacontract.org/2004/07/EpicWareWeb.Models")
        // c type: ArrayOfMission
        // elementDescription: EpicWareWeb_Models_xsd.globalElements.ArrayOfMission
        WS_ELEMENT_DESCRIPTION ArrayOfMission;
        
        // xml element: Mission ("http://schemas.datacontract.org/2004/07/EpicWareWeb.Models")
        // c type: Mission
        // elementDescription: EpicWareWeb_Models_xsd.globalElements.Mission
        WS_ELEMENT_DESCRIPTION Mission;
        
        // xml element: Mood ("http://schemas.datacontract.org/2004/07/EpicWareWeb.Models")
        // c type: Mood
        // elementDescription: EpicWareWeb_Models_xsd.globalElements.Mood
        WS_ELEMENT_DESCRIPTION Mood;
        
        // xml element: ArrayOfNotification ("http://schemas.datacontract.org/2004/07/EpicWareWeb.Models")
        // c type: ArrayOfNotification
        // elementDescription: EpicWareWeb_Models_xsd.globalElements.ArrayOfNotification
        WS_ELEMENT_DESCRIPTION ArrayOfNotification;
        
        // xml element: Notification ("http://schemas.datacontract.org/2004/07/EpicWareWeb.Models")
        // c type: Notification
        // elementDescription: EpicWareWeb_Models_xsd.globalElements.Notification
        WS_ELEMENT_DESCRIPTION Notification;
        
        // xml element: NotificationType ("http://schemas.datacontract.org/2004/07/EpicWareWeb.Models")
        // c type: NotificationType
        // elementDescription: EpicWareWeb_Models_xsd.globalElements.NotificationType
        WS_ELEMENT_DESCRIPTION NotificationType;
        
        // xml element: ArrayOfScoreUser ("http://schemas.datacontract.org/2004/07/EpicWareWeb.Models")
        // c type: ArrayOfScoreUser
        // elementDescription: EpicWareWeb_Models_xsd.globalElements.ArrayOfScoreUser
        WS_ELEMENT_DESCRIPTION ArrayOfScoreUser;
        
        // xml element: ScoreUser ("http://schemas.datacontract.org/2004/07/EpicWareWeb.Models")
        // c type: ScoreUser
        // elementDescription: EpicWareWeb_Models_xsd.globalElements.ScoreUser
        WS_ELEMENT_DESCRIPTION ScoreUser;
        
        // xml element: Profile ("http://schemas.datacontract.org/2004/07/EpicWareWeb.Models")
        // c type: Profile
        // elementDescription: EpicWareWeb_Models_xsd.globalElements.Profile
        WS_ELEMENT_DESCRIPTION Profile;
        
        // xml element: Country ("http://schemas.datacontract.org/2004/07/EpicWareWeb.Models")
        // c type: Country
        // elementDescription: EpicWareWeb_Models_xsd.globalElements.Country
        WS_ELEMENT_DESCRIPTION Country;
        
        // xml element: ArrayOfTag ("http://schemas.datacontract.org/2004/07/EpicWareWeb.Models")
        // c type: ArrayOfTag
        // elementDescription: EpicWareWeb_Models_xsd.globalElements.ArrayOfTag
        WS_ELEMENT_DESCRIPTION ArrayOfTag;
        
        // xml element: Tag ("http://schemas.datacontract.org/2004/07/EpicWareWeb.Models")
        // c type: Tag
        // elementDescription: EpicWareWeb_Models_xsd.globalElements.Tag
        WS_ELEMENT_DESCRIPTION Tag;
        
        // xml element: ArrayOfUser ("http://schemas.datacontract.org/2004/07/EpicWareWeb.Models")
        // c type: ArrayOfUser
        // elementDescription: EpicWareWeb_Models_xsd.globalElements.ArrayOfUser
        WS_ELEMENT_DESCRIPTION ArrayOfUser;
        
    } globalElements;
} _EpicWareWeb_Models_xsd;

extern const _EpicWareWeb_Models_xsd EpicWareWeb_Models_xsd;

#ifdef __cplusplus
}
#endif

